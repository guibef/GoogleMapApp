{"version":3,"sources":["components/CountyCard.js","services/CovidCaseService.js","util/MapUtil.js","components/StateCard.js","components/CovidMap.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CountyCard","props","classes","Card","className","CardContent","Typography","color","gutterBottom","province","variant","component","county","stats","confirmed","deaths","CovidCaseService","axios","get","MapUtil","points","result","total","states","point","coordinates","i","bounds","nw","se","longitude","lng","latitude","lat","StateCard","state","Marker","children","CovidMap","zoom","limit","style","height","width","bootstrapURLKeys","key","defaultCenter","this","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","handleMapInitialized","onChange","setState","renderPoints","a","response","data","console","log","clusterPoints","Array","isArray","push","length","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e26b5f68.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function CountyCard(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.province}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.county}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n            Confirmed: {props.stats.confirmed}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n            Death: {props.stats.deaths}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const CovidCaseService = {\r\n    getUsData: function() {\r\n        return axios.get('https://corona.lmao.ninja/v2/jhucsse/counties')\r\n    }\r\n};","export const MapUtil = {\r\n    // 1 - 10 state points\r\n    //11 - 20 county points\r\n    createClusterPoints: function(points) {\r\n        const result = { //{1-10} states, 11-20: points\r\n            total: 0\r\n        };\r\n\r\n        if(!points) {\r\n            return result;\r\n        }\r\n        const states = {}; //{state, info}\r\n        for (const point of points) {\r\n            result.total += point.stats.confirmed;\r\n            states[point.province] = states[point.province] || {\r\n                confirmed: 0,\r\n                deaths: 0\r\n            };\r\n\r\n            states[point.province].confirmed += point.stats.confirmed;\r\n            states[point.province].deaths += point.stats.deaths;\r\n            states[point.province].coordinates = point.coordinates;\r\n        }\r\n        for (let i = 1; i <= 10; i++) {\r\n            result[i] = states;\r\n        }\r\n        for (let i = 11; i <= 20; i++) {\r\n            result[i] = points;\r\n        }\r\n        return result;\r\n    },\r\n\r\n    inBoundary: function (coordinates, bounds) {\r\n        return coordinates && bounds && bounds.nw && bounds.se && ((coordinates.longitude >= bounds.nw.lng && coordinates.longitude <= bounds.se.lng) || (coordinates.longitude <= bounds.nw.lng && coordinates.longitude >= bounds.se.lng))\r\n            && ((coordinates.latitude >= bounds.se.lat && coordinates.latitude <= bounds.nw.lat) || (coordinates.latitude <= bounds.se.lat && coordinates.latitude >= bounds.nw.lat));\r\n    }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function StateCard(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.state}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n            Confirmed: {props.confirmed}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n            Death: {props.deaths}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport CountyCard from './CountyCard';\r\nimport { CovidCaseService } from '../services/CovidCaseService';\r\nimport { MapUtil } from '../util/MapUtil';\r\nimport StateCard from './StateCard';\r\n \r\n//Wrapper component\r\nconst Marker = ({ children }) => children;\r\n \r\nclass CovidMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 42,\r\n      lng: -72\r\n    },\r\n    zoom: 10\r\n  };\r\n\r\n  state = {\r\n      zoom: 11,\r\n      bounds: null,\r\n      points: {} // all points from the API\r\n  };\r\n\r\n  limit = 10;\r\n \r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key:'AIzaSyCppsSBI_wgtHR4zCv2hwq0LFYOFWkRawQ' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={() => this.handleMapInitialized()}\r\n          onChange={({zoom, bounds}) => {\r\n              this.setState({\r\n                  zoom,\r\n                  bounds\r\n              });\r\n          }}\r\n        >\r\n          {this.renderPoints()}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n\r\n    // ES2017 async await\r\n    async handleMapInitialized() {\r\n        try {\r\n            const response = await CovidCaseService.getUsData(); //Promise\r\n            //console.log(response.data);\r\n            this.setState({\r\n                points: MapUtil.createClusterPoints(response.data)\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n        // TODO - render data from https://\r\n    }\r\n\r\n    renderPoints() {\r\n      const clusterPoints = this.state.points[this.state.zoom];\r\n      const result = [];\r\n      if (!clusterPoints) {\r\n        return result;\r\n      }\r\n\r\n      if (Array.isArray(clusterPoints)) {//county points\r\n        for (const point of clusterPoints) {\r\n          if (MapUtil.inBoundary(point.coordinates, this.state.bounds)) {\r\n            result.push(\r\n                <Marker key={`${point.province}-${point.county}`}\r\n                        lat = {point.coordinates.latitude}\r\n                        lng = {point.coordinates.longitude}>\r\n                      <CountyCard {...point}/>\r\n                </Marker>\r\n            );\r\n          }\r\n          if (result.length >= this.limit) {\r\n            break;\r\n          }\r\n        }\r\n      } else { //states points\r\n        for (const state in clusterPoints) {\r\n          const point = clusterPoints[state];\r\n          if (MapUtil.inBoundary(point.coordinates, this.state.bounds)) {\r\n            result.push(\r\n                <Marker key={state}\r\n                        lat = {point.coordinates.latitude}\r\n                        lng = {point.coordinates.longitude}>\r\n                      <StateCard {...point} state = {state}/>\r\n                </Marker>\r\n            );\r\n          }\r\n          if (result.length >= this.limit) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    } \r\n}\r\n \r\nexport default CovidMap;","import './App.css';\r\nimport CovidMap from './components/CovidMap';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <CovidMap />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}